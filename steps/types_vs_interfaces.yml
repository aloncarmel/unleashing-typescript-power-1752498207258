id: types_vs_interfaces
learningObjectives:
  - Explore the differences between interfaces and types in TypeScript.
hints:
  - Types can create more flexible structures.
  - Interfaces are perfect for defining object shapes.
startFlow:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: "You've been doing great! Now, let's delve into a comparison between two
              key features: types and interfaces."
          - text: Can you explain the primary differences between types and interfaces in
              TypeScript?
          - text: Think about usage, flexibility, and what scenarios one might be preferred
              over the other.
trigger:
  type: user_message
  params:
    person: lucca
  flowNode:
    do:
      - actionId: parse_user_response
        name: user_answer
        params:
          prompt: "

            \    Please evaluate the user's answer in relation to
            the expected answer: The primary differences between types and
            interfaces in TypeScript include: interfaces are typically used for
            object shapes and can be extended or implemented, whereas types can
            be used for more flexible constructs like union and intersection
            types, making them versatile for defining various kinds of type
            constructs..

            \    # Assessment Criteria

            \    - Determine if the user's response demonstrates a
            clear understanding of the key concepts and ideas presented in the
            expected answer.

            \    - Consider synonyms, paraphrasing, and different
            phrasing that convey the same meaning.

            \    - Be flexible and focus on the essence of the
            answer rather than exact wording.

            \ \ 

            \    # Response Guidelines:

            \    - If the user's answer is correct or shows
            sufficient understanding, return 'correct: true'.

            \      - Provide a positive and affirming message,
            congratulating them and reinforcing their understanding.

            \    - If the user's answer is incorrect or incomplete,
            return 'correct: false'.

            \      - Gently explain why the answer is not fully
            correct or what may be missing.

            \      - Encourage them to try again, being empathetic
            and supportive.

            \ \ 

            \    # Tone and Style:

            \    - Use friendly and encouraging language.

            \    - Be empathetic to the user's learning process.

            \    - Focus on helping the user learn and understand
            the material.

            \  "
          schema:
            correct: boolean
            reply: string
    if:
      conditions:
        - conditionId: is_truthy
          params:
            value: ${outputs.user_answer.value.correct}
      then:
        do:
          - actionId: bot_message
            params:
              person: lucca
              messages:
                - text: ${outputs.user_answer.value.reply}
          - actionId: finish_step
      else:
        do:
          - actionId: bot_message
            params:
              person: lucca
              messages:
                - text: ${outputs.user_answer.value.reply}
